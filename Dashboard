import { useState, useEffect } from "react";
import { motion } from "framer-motion";

export default function Dashboard() {
  // Replace these 57 strings with your actual video titles (in the same order as the playlist)
  const videos = [
    "Video Title 1",
    "Video Title 2",
    "Video Title 3",
    "Video Title 4",
    "Video Title 5",
    "Video Title 6",
    "Video Title 7",
    "Video Title 8",
    "Video Title 9",
    "Video Title 10",
    "Video Title 11",
    "Video Title 12",
    "Video Title 13",
    "Video Title 14",
    "Video Title 15",
    "Video Title 16",
    "Video Title 17",
    "Video Title 18",
    "Video Title 19",
    "Video Title 20",
    "Video Title 21",
    "Video Title 22",
    "Video Title 23",
    "Video Title 24",
    "Video Title 25",
    "Video Title 26",
    "Video Title 27",
    "Video Title 28",
    "Video Title 29",
    "Video Title 30",
    "Video Title 31",
    "Video Title 32",
    "Video Title 33",
    "Video Title 34",
    "Video Title 35",
    "Video Title 36",
    "Video Title 37",
    "Video Title 38",
    "Video Title 39",
    "Video Title 40",
    "Video Title 41",
    "Video Title 42",
    "Video Title 43",
    "Video Title 44",
    "Video Title 45",
    "Video Title 46",
    "Video Title 47",
    "Video Title 48",
    "Video Title 49",
    "Video Title 50",
    "Video Title 51",
    "Video Title 52",
    "Video Title 53",
    "Video Title 54",
    "Video Title 55",
    "Video Title 56",
    "Video Title 57"
  ];

  const [completed, setCompleted] = useState([]);

  useEffect(() => {
    const saved = localStorage.getItem("go-progress");
    if (saved) {
      try {
        setCompleted(JSON.parse(saved));
      } catch (e) {
        console.error("Failed to parse saved progress:", e);
      }
    }
  }, []);

  useEffect(() => {
    localStorage.setItem("go-progress", JSON.stringify(completed));
  }, [completed]);

  const toggleVideo = (index) => {
    if (completed.includes(index)) {
      setCompleted(completed.filter((i) => i !== index));
    } else {
      setCompleted([...completed, index]);
    }
  };

  const progress = Math.round((completed.length / videos.length) * 100);

  const colors = ["#ffadad", "#ffd6a5", "#fdffb6", "#caffbf", "#9bf6ff", "#a0c4ff", "#bdb2ff", "#ffc6ff"];

  return (
    <div style={{ fontFamily: "Comic Sans MS, sans-serif", padding: "20px", maxWidth: "900px", margin: "auto", background: "#000", borderRadius: "16px", boxShadow: "0 10px 20px rgba(0,0,0,0.5)" }}>
      <motion.h1
        initial={{ y: -50, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.5 }}
        style={{ textAlign: "center", fontSize: "2.5rem", marginBottom: "20px", color: "#fff", textShadow: "2px 2px #ff6a88" }}
      >
        ðŸŽ‰ Go Programming Playlist Tracker ðŸŒˆ
      </motion.h1>

      <div style={{ background: "rgba(30,30,30,0.95)", borderRadius: "12px", padding: "20px" }}>
        <h2 style={{ color: "#fff" }}>Progress: {progress}%</h2>
        <div style={{ background: "#444", borderRadius: "12px", overflow: "hidden", marginBottom: "30px", height: "25px" }}>
          <motion.div
            initial={{ width: 0 }}
            animate={{ width: `${progress}%` }}
            transition={{ duration: 0.5 }}
            style={{
              height: "100%",
              background: "linear-gradient(90deg, #ff6a88, #ff99ac, #fc6076, #ff9a44)",
              borderRadius: "12px"
            }}
          />
        </div>

        <div>
          {videos.map((title, index) => (
            <motion.div
              key={index}
              whileHover={{ scale: 1.05 }}
              style={{
                display: "flex",
                alignItems: "center",
                padding: "12px",
                borderRadius: "10px",
                marginBottom: "8px",
                background: completed.includes(index) ? "#1b4332" : colors[index % colors.length],
                cursor: "pointer",
                border: "2px solid #fff",
                boxShadow: "2px 2px 6px rgba(0,0,0,0.5)"
              }}
              onClick={() => toggleVideo(index)}
            >
              <input
                type="checkbox"
                checked={completed.includes(index)}
                onChange={() => toggleVideo(index)}
                style={{ marginRight: "10px", transform: "scale(1.3)" }}
              />
              <span style={{ textDecoration: completed.includes(index) ? "line-through" : "none", fontWeight: "bold", color: completed.includes(index) ? "#ddd" : "#111" }}>
                {title}
              </span>
            </motion.div>
          ))}
        </div>
      </div>

      {/* Manual Copy List Section */}
      <div style={{ marginTop: "30px", background: "rgba(50,50,50,0.9)", borderRadius: "12px", padding: "20px", color: "#fff" }}>
        <h2>ðŸ“‹ Manual Copy List (All Video Titles)</h2>
        <ol>
          {videos.map((title, index) => (
            <li key={index} style={{ marginBottom: "6px" }}>{title}</li>
          ))}
        </ol>
      </div>
    </div>
  );
}
